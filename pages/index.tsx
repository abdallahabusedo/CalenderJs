import Head from "next/head";
import React from "react";
import { BsArrowLeft, BsArrowRight } from "react-icons/bs";
import { differenceInDays, endOfMonth, format, startOfMonth } from "date-fns";
export default function Home() {
  const [selectedReq, setSelectedReq] = React.useState<
    "Yesterday" | "Last7" | "Last30" | "LastM"
  >("Yesterday");
  const days = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
  const [startDate, setStartDate] = React.useState<Date>(new Date());
  const [endDate, setEndDate] = React.useState<Date>(new Date());
  const date = [];
  for (let i = 0; i < 30; i++) {
    date[i] = i + 1;
  }
  const startMonth = startOfMonth(new Date());
  const endMonth = endOfMonth(new Date());
  const numDays = differenceInDays(endMonth, startMonth) + 1;
  const prefixDays = startMonth.getDay();
  const [my, setMY] = React.useState(format(new Date(), "MMMM / yyyy"));

  let x = new Date();
  x.setDate(1);
  x.setMonth(x.getMonth() - 1);
  const numOfDaysInLastMonth = differenceInDays(endOfMonth(x), startOfMonth(x));
  /**
   * @param num
   * @description Calculate the date last by days
   */
  const lastButtonDays = (num: number) => {
    const today = new Date();
    const Last = new Date();
    Last.setDate(today.getDate() - num);
    setStartDate(Last);
    setEndDate(today);
  };
  /**
   * @param num
   * @description Calculate the date last by months
   */
  const lastButtonMonths = (num: number) => {
    const today = new Date();
    const Last = new Date();
    Last.setMonth(today.getMonth() - num);
    setStartDate(Last);
    setEndDate(today);
  };
  const lastBackOrForwardOneMonth = (num: number) => {
    let newMonth = new Date(my);
    newMonth.setMonth(newMonth.getMonth() + num);
    let newMonthFormatted = format(newMonth, "MMMM / yyyy");
    setMY(newMonthFormatted);
  };
  return (
    <div className="flex items-center justify-center h-screen border-2 rounded-md ">
      <Head>
        <title>Calender</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="bg-white border w-[700px] rounded-xl">
        <div>
          <div className="flex justify-evenly mt-10 px-10 pb-10">
            <button
              onClick={() => {
                lastButtonDays(1);
                setSelectedReq("Yesterday");
              }}
              className={`${
                selectedReq === "Yesterday"
                  ? " bg-[#E07400] text-white"
                  : " bg-white text-black border border-gray-200"
              } p-2 px-4 rounded-xl shadow font-bold`}
            >
              Yesterday
            </button>
            <button
              onClick={() => {
                lastButtonDays(7);
                setSelectedReq("Last7");
              }}
              className={`${
                selectedReq === "Last7"
                  ? " bg-[#E07400] text-white"
                  : " bg-white text-black border border-gray-200"
              } p-2 px-4 rounded-xl shadow font-bold`}
            >
              Last 7 days
            </button>
            <button
              onClick={() => {
                lastButtonMonths(1);
                setSelectedReq("Last30");
              }}
              className={`${
                selectedReq === "Last30"
                  ? " bg-[#E07400] text-white "
                  : " bg-white text-black border border-gray-200"
              } p-2 px-4 rounded-xl shadow font-bold`}
            >
              Last 30 days
            </button>
            <button
              onClick={() => {
                lastButtonMonths(6);
                setSelectedReq("LastM");
              }}
              className={`${
                selectedReq === "LastM"
                  ? " bg-[#E07400] text-white"
                  : " bg-white text-black border border-gray-200"
              } p-2 px-4 rounded-xl shadow font-bold`}
            >
              Last 6 months
            </button>
          </div>
          <hr className="h-[1px] bg-gray-200 rounded border-0 dark:bg-gray-700" />
          <div className="flex justify-evenly w-full my-6">
            <button>
              <BsArrowLeft
                onClick={() => {
                  lastBackOrForwardOneMonth(-1);
                }}
              />
            </button>
            <h1 className="font-bold">{my}</h1>
            <button>
              <BsArrowRight
                onClick={() => {
                  lastBackOrForwardOneMonth(1);
                }}
              />
            </button>
          </div>
        </div>

        <div className="flex justify-center gap-3 mt-4">
          {days.map((day, indx) => {
            return (
              <label key={indx} className="bg-[#FFF3E3] py-3 px-5 rounded-md">
                {day}
              </label>
            );
          })}
        </div>
        <div className="flex justify-center">
          <div className="grid grid-cols-7 items-center justify-center text-center gap-5 my-6 w-fit">
            {Array.from({ length: prefixDays }).map((__, indx) => {
              const date = indx + 1;
              return (
                <button
                  disabled
                  key={date}
                  className="bg-[#ffffff] pt-2 px-5 rounded-md font-bold text-[#707070]"
                >
                  {numOfDaysInLastMonth + 2 - prefixDays + indx}
                </button>
              );
            })}
            {Array.from({ length: numDays }).map((__, indx) => {
              const date = indx + 1;
              return (
                <button
                  key={date}
                  className="bg-[#ffffff] pt-2 px-5 rounded-md font-bold"
                >
                  {date.toLocaleString("en-US", { minimumIntegerDigits: 2 })}
                </button>
              );
            })}
          </div>
        </div>
        <hr className="h-[1px] bg-gray-200 rounded border-0 dark:bg-gray-400" />
        <div className="flex gap-6 justify-end mr-8 my-4 text-xl">
          <button className="font-bold">Cancel</button>
          <button className="font-bold text-[#E07400]">Apply</button>
        </div>
      </div>
      <div className="flex flex-col justify-center items-center">
        <label htmlFor="startDate">startDate</label>
        <div>
          <label id="startDate">{startDate.toDateString()}</label>
        </div>
        <label htmlFor="endDate">endDate</label>
        <div>
          <label id="endDate">{endDate.toDateString()}</label>
        </div>
      </div>
    </div>
  );
}

/**
 *   const Months = [
    "January",
    "February",
    "March",
    "April",
    "May",
    "June",
    "July",
    "August",
    "September",
    "October",
    "November",
    "December",
  ];
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 * 
 */
